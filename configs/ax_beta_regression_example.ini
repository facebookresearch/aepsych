# The common section includes parameters and other info used by multiple parts of the server.
[common]
use_ax = True # Required to enable the new parameter features.

stimuli_per_trial = 1 # The number of stimuli shown in each trial; currently the Ax backend only supports 1
outcome_types = [percentage] # The type of response given by the participant; can be [binary] or [continuous].
                             # Multiple outcomes will be supported in a future update.

parnames = [par1, par2, par3] # Names of continuous parameters.
lb = [-1, -1, -1] # Lower bounds of the continuous parameters, in the same order as above.
ub = [1, 1, 1] # Upper bounds of the continuous parameter, in the same order as above.
par_constraints = [par1 >= par2] # Linear constrains placed on the continuous parameters
                                                     # Parameters with log_scale = True cannot be included here.
                                                     # Having lots of constraints may make trial generation slow.

choice_parnames = [par4, par5] # Names of discrete parameters; the possible values of each are specified below.

fixed_parnames = [par6, par7] # Names of fixed parameters, the values of which are specified below. These parameters
                              # always have the same value and are not modeled.

strategy_names = [init_strat, opt_strat] # The strategies that will be used, corresponding to the named sections below

# Configuration for the initialization strategy, which we use to gather initial points
# before we start doing model-based acquisition.
[init_strat]
generator = SobolGenerator # Start trial generation with sobol samples.
min_total_tells = 10 # Number of data points required to complete this strategy. For a real experiment, you will want
                    # 5-10 initialization trials per parameter.
[SobolGenerator]
seed = 1 # Random seed for the Sobol generator. If not specified, a random seed will be used.
scramble = True # Whether to scramble the Sobol sequence. If not specified, scrambling will be used.

# Configuration for the optimization strategy, our model-based acquisition strategy.
[opt_strat]
generator = OptimizeAcqfGenerator # after sobol, do model-based active-learning
min_total_tells = 12 # Finish the experiment after 2 total data points have been collected under opt_strat. Depending on how noisy
                    # your problem is, you may need several dozen points per parameter to get an accurate model.
acqf = qNoisyExpectedImprovement # The acquisition function to be used with the model. We recommend
                                 # qNoisyExpectedImprovement for optimization problems.
model = BetaRegressionGP

[par4]
choices = [a, b] # Possible values for the discrete parameter, par4. By default, no ordering is assumed.
is_ordered = False # Indicates that the choices for par4 are not ordered.

[par5]
choices = [low, med, high] # Possible values for the discrete parameter, par5.
is_ordered = True # Indicates that the choices for par5 are ordered such that low < med < high.

[par3]
value_type = int

[par6]
value = 0 # Value of the fixed parameter, par6. Can be a float or string.

[par7]
value = placeholder # Value of the fixed parameter, par7. Can be a float or string.
