### Example config for ordinal (likert) data
# Assuming you are learning a latent value from k-point scores,  the
# only things that need to be changed for a
# typical experiment are:
# 1. parnames, lb and ub under [common], and optionally target.
# 2. min_asks under init_strat
# 3. n_levels under OrdinalLikelihood

## The common section includes global server parameters and parameters
## reused in multiple other classes
[common]
parnames = [par1, par2] # names of the parameters
lb = [-1, -1] # lower bounds of the parameters, in the same order as above
ub = [1, 1] # upper bounds of parameter, in the same order as above
stimuli_per_trial = 1 # the number of stimuli shown in each trial; 1 for single, or 2 for pairwise experiments
outcome_types = [ordinal]
strategy_names = [init_strat] # The strategies that will be used, corresponding to the named sections below

# Configuration for the initialization strategy, which we use to gather initial points
# before we start doing model-based acquisition
[init_strat]
min_asks = 50 # number of sobol trials to run
generator = SobolGenerator # The generator class used to generate new parameter values
model = OrdinalGPModel
refit_every = 50

## Below this section are configurations of all the classes defined in the section above,
## matching the API in the code.

## OrdinalGPModel model settings.
[OrdinalGPModel]
# Number of inducing points for approximate inference. 100 is fine for 2d and overkill for 1d;
# for larger dimensions, scale this up.
inducing_size = 100
# ordinal_mean_covar_factory has better defaults for the ordinal setting than the default factory,
mean_covar_factory = ordinal_mean_covar_factory
likelihood = OrdinalLikelihood

[OrdinalLikelihood]
n_levels = 5
