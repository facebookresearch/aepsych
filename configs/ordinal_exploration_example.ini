### Example config for ordinal (likert) data
# Assuming you are learning a latent value from k-point scores

## The common section includes global server parameters and parameters
## reused in multiple other classes
[common]
parnames = [par1, par2] # names of the parameters
stimuli_per_trial = 1 # the number of stimuli shown in each trial; 1 for single, or 2 for pairwise experiments
outcome_types = [ordinal]
strategy_names = [init_strat] # The strategies that will be used, corresponding to the named sections below

[par1]
par_type = continuous
lower_bound = -1
upper_bound = 1

[par2]
par_type = continuous
lower_bound = -1
upper_bound = 1

# Configuration for the initialization strategy, which we use to gather initial points
# before we start doing model-based acquisition
[init_strat]
min_asks = 50 # number of sobol trials to run
generator = SobolGenerator # The generator class used to generate new parameter values
model = OrdinalGPModel
refit_every = 50

## Below this section are configurations of all the classes defined in the section above,
## matching the API in the code.

## OrdinalGPModel model settings.
[OrdinalGPModel]
# Number of inducing points for approximate inference. 100 is fine for 2d and overkill for 1d;
# for larger dimensions, scale this up.
inducing_size = 100
# We want to edit the default mean and covar modules, so we use a factory function
mean_covar_factory = DefaultMeanCovarFactory
likelihood = OrdinalLikelihood

[DefaultMeanCovarFactory]
zero_mean = True # Make mean zero.
fixed_kernel_amplitude = True # Make covariance module not scale

[OrdinalLikelihood]
n_levels = 5
