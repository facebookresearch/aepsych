### Example config for mixed likelihood constraints

[common]
parnames = [par1, par2]
strategy_names = [init_strat, opt_strat]
stimuli_per_trial = 1
outcome_types = [binary]

[par1]
par_type = continuous
lower_bound = 0
upper_bound = 500

[par2]
par_type = continuous
lower_bound = 0
upper_bound = 2

[init_strat]
min_asks = 1
generator = SobolGenerator

[opt_strat]
min_asks = 1
model = GPClassificationModel
generator = OptimizeAcqfGenerator

[GPClassificationModel] # These types of constraints are only available for GPClassification
constraint_locations = [[100, 0.4], [200, 1.0], [300, 1.5]] # Individual locations can be defined
constraint_values = [1, 0.7, 0.3] # For each location, a specific value is needed, defined in the probability space
constraint_strengths = [1e-3, 2e-3, 3e-3] # The strength of the constraints (the smaller the stronger), this is optional, without it, a heuristic is used
constraint_factory = constraint_factory # Constraint factory can be defined to constraint a subspace

[constraint_factory] # Constraint factory is used to define constraints over a space
constraint_lower = [[0, 0], [0, 0]] # The subspace is defined by coordinates
constraint_upper = [[0, 2], [500, 0]] # Multiple subspaces can be defined
constraint_values = [0.5, 0.5] # Each subspace needs a value
constraint_strengths = [1e-2, 1e-2] # Each subspace can have an optional strength
points_per_dim = 2 # The space is constructed via a grid of points, the more points the tighter the grid

[OptimizeAcqfGenerator]
acqf = qLogNoisyExpectedImprovement
