### Example config for optimization (tuning) from pairwise observations
# The only things that need to be changed for a
# typical experiment are:
### Example config for 1D optimization from single observations.

[common]
parnames = [R, B] # names of the parameters
lb = [0, 0] # lower bounds of the parameters, in the same order as above
ub = [1, 1] # upper bounds of parameter, in the same order as above
outcome_type = single_probit # single_probit (1IFC) 

# Initialization strategy
[SobolStrategy]
n_trials = 10 # number of sobol trials to run

# Optimization strategy, our model-based acquisition
[ModelWrapperStrategy]
n_trials = 20 # number of model-based trials to run

####################################################################################
# Advanced settings
####################################################################################

## The experiment section covers the main components of the experiment:
## the strategies used for initialization and optimization, the
## modelbridge and model used for the modeling part, and the acquisition
## function
[experiment]
# Acquisition function: the objective we use to decide where to sample next. 
acqf = qUpperConfidenceBound

# initialization strategy. Currently SobolStrategy (a quasi-random grid) is the only
# available option here.
init_strat_cls = SobolStrategy

# Optimization strategy. ModelWrapperStrategy is the default. The other supported option
# is EpsilonGreedyModelWrapperStrategy, which interleaves the model with a random trial
# with probability=epsilon (by default 0.1).
opt_strat_cls = ModelWrapperStrategy

# Modelbridge: the wrapper that combines model and acquisition together. PairwiseProbitModelbridge
# is the only option for pairwise (see other config examples for non-pairwise options).
modelbridge_cls = SingleProbitModelbridge

# The model used as part of the modelbridge. PairwiseGP is the only option for now.
model = GPClassificationModel

## Below this section are configurations of all the classes defined in the section above,
## matching the API in the code.

## Acquisition function settings; we recommend not changing this.
[qUpperConfidenceBound]
# The transformation of the latent function before threshold estimation. ProbitObjective
# lets us search where the probability is uncertain (vs where there is high variance
# in the function itself, which might still lead to low variance on the probability
# after the probit transform).
objective = ProbitObjective
beta = 3.98

## Modelbridge settings, governing acquisition function optimization.
[SingleProbitModelbridge]
# number of restarts for acquisition function optimization.
restarts = 10
# number of samples for quasi-random initialization of the acquisition function optimizer
samps = 1000