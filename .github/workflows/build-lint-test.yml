name: Build, lint, test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 12 * * *" # every day at 4AM west coast time

jobs:
  lint:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          pip install ".[dev]"
      - name: Lint with flake8
        id: flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Type check with mypy
        id: mypy
        if: always()
        run: |
          mypy --config-file mypy.ini
      - uses: omnilib/ufmt@action-v1
        if: always()
        with:
          path: aepsych tests tests_gpu
          requirements: requirements-fmt.txt
          python-version: "3.10"

  build-test:

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [macos-latest, windows-latest, macos-13]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ".[dev]"
    - name: Test with unittest
      run: |
        cd tests
        python -m unittest
